{"ast":null,"code":"import _initializerDefineProperty from \"C:/Workspace/React-Mobx/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:/Workspace/React-Mobx/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:/Workspace/React-Mobx/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action } from 'mobx';\nlet CounterStore = (_class = (_temp = class CounterStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_count\", _descriptor, this);\n  }\n\n  get count() {\n    return this._count;\n  }\n\n  increment() {\n    this._count++;\n  }\n\n  decrement() {\n    this._count--;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_count\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 5;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"increment\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"increment\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"decrement\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"decrement\"), _class.prototype)), _class);\nexport default new CounterStore();","map":{"version":3,"sources":["C:/Workspace/React-Mobx/4.counter-mobx/src/store/CounterStore.js"],"names":["observable","action","CounterStore","count","_count","increment","decrement"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;IAEMC,Y,sBAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA;AAAA;;AAKf,MAAIC,KAAJ,GAAY;AACR,WAAO,KAAKC,MAAZ;AACH;;AAEDC,EAAAA,SADA,GACY;AACR,SAAKD,MAAL;AACH;;AAEDE,EAAAA,SADA,GACY;AACR,SAAKF,MAAL;AACH;;AAfc,C,gFAEdJ,U;;;;;WACQ,C;;8DAKRC,M,gJAIAA,M;AAQL,eAAe,IAAIC,YAAJ,EAAf","sourcesContent":["import { observable, action } from 'mobx';\r\n\r\nclass CounterStore {\r\n\r\n    @observable\r\n    _count = 5\r\n\r\n    get count() {\r\n        return this._count;\r\n    }\r\n    @action\r\n    increment() {\r\n        this._count++;\r\n    }\r\n    @action\r\n    decrement() {\r\n        this._count--;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new CounterStore();"]},"metadata":{},"sourceType":"module"}